@file:OptIn(ExperimentalMaterial3Api::class)

package com.bizlijakaria.kotlinecompose

import android.graphics.Paint.Style
import android.os.Bundle
import androidx.activity.ComponentActivity
import androidx.activity.compose.setContent
import androidx.compose.foundation.Image
import androidx.compose.foundation.background
import androidx.compose.foundation.border
import androidx.compose.foundation.layout.Arrangement
import androidx.compose.foundation.layout.Box
import androidx.compose.foundation.layout.Column
import androidx.compose.foundation.layout.Row
import androidx.compose.foundation.layout.fillMaxHeight
import androidx.compose.foundation.layout.fillMaxSize
import androidx.compose.foundation.layout.fillMaxWidth
import androidx.compose.foundation.layout.height
import androidx.compose.foundation.layout.padding
import androidx.compose.foundation.layout.size
import androidx.compose.foundation.shape.CircleShape
import androidx.compose.material.icons.Icons
import androidx.compose.material.icons.filled.AccountCircle
import androidx.compose.material.icons.filled.Add
import androidx.compose.material.icons.filled.Lock
import androidx.compose.material.icons.filled.Menu
import androidx.compose.material.icons.filled.Notifications
import androidx.compose.material.icons.filled.Search
import androidx.compose.material3.ExperimentalMaterial3Api
import androidx.compose.material3.FloatingActionButton
import androidx.compose.material3.Icon
import androidx.compose.material3.IconButton
import androidx.compose.material3.MaterialTheme
import androidx.compose.material3.OutlinedButton
import androidx.compose.material3.OutlinedTextField
import androidx.compose.material3.Scaffold
import androidx.compose.material3.Surface
import androidx.compose.material3.Switch
import androidx.compose.material3.Text
import androidx.compose.material3.TopAppBar
import androidx.compose.runtime.Composable
import androidx.compose.runtime.mutableStateOf
import androidx.compose.runtime.remember
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.draw.clip
import androidx.compose.ui.graphics.Color
import androidx.compose.ui.modifier.modifierLocalConsumer
import androidx.compose.ui.res.painterResource
import androidx.compose.ui.text.font.FontFamily
import androidx.compose.ui.text.font.FontWeight
import androidx.compose.ui.tooling.preview.Preview
import androidx.compose.ui.unit.dp
import androidx.compose.ui.unit.sp
import com.bizlijakaria.kotlinecompose.ui.theme.KotlineComposeTheme

class MainActivity : ComponentActivity() {
    @OptIn(ExperimentalMaterial3Api::class)
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContent {
            KotlineComposeTheme {

                Surface (color=MaterialTheme.colorScheme.background){
                    RowColumn()
                }
                // Call the Login composable function here
            }
        }
    }

    @Composable
    fun RowColumn() {

      Column(

    modifier = Modifier
        .fillMaxWidth()
        .fillMaxHeight()
        .background(color = Color.White),
          verticalArrangement = Arrangement.Center,




      ) {


        Row (

        ){
            Image(painter = painterResource(id = R.drawable.family),

                contentDescription ="Android",
                alignment = Alignment.Center,
                modifier = Modifier
                    .size(100.dp)
                    .clip(shape = CircleShape)

            )
            Box(modifier = Modifier.size(20.dp,0.dp))

            Image(painter = painterResource(id = R.drawable.family),

                contentDescription ="Android",
                alignment = Alignment.Center,
                modifier = Modifier
                    .size(100.dp)
                    .clip(shape = CircleShape)

            )
            Box(modifier = Modifier.size(20.dp,0.dp))

            Image(painter = painterResource(id = R.drawable.family),

                contentDescription ="Android",
                alignment = Alignment.Center,
                modifier = Modifier
                    .size(100.dp)
                    .clip(shape = CircleShape)

            )
            Box(modifier = Modifier.size(20.dp,0.dp))

            Image(painter = painterResource(id = R.drawable.family),

                contentDescription ="Android",
                alignment = Alignment.Center,
                modifier = Modifier
                    .size(100.dp)
                    .clip(shape = CircleShape)

            )
            Box(modifier = Modifier.size(20.dp,0.dp))
        }


          Image(painter = painterResource(id = R.drawable.family),

              contentDescription ="Android",
              alignment = Alignment.Center,
              modifier = Modifier
                  .size(100.dp)
                  .clip(shape = CircleShape)

          )
          Box(modifier = Modifier.size(0.dp,20.dp))

          Image(painter = painterResource(id = R.drawable.family),

              contentDescription ="Android",
              alignment = Alignment.Center,
              modifier = Modifier
                  .size(100.dp)
                  .clip(shape = CircleShape)

          )
          Box(modifier = Modifier.size(0.dp,20.dp))

          Image(painter = painterResource(id = R.drawable.family),

              contentDescription ="Android",
              alignment = Alignment.Center,
              modifier = Modifier
                  .size(100.dp)
                  .clip(shape = CircleShape)

          )
          Box(modifier = Modifier.size(0.dp,20.dp))

          Image(painter = painterResource(id = R.drawable.family),

              contentDescription ="Android",
              alignment = Alignment.Center,
              modifier = Modifier
                  .size(100.dp)
                  .clip(shape = CircleShape)

          )
          Box(modifier = Modifier.size(0.dp,20.dp))

          Image(painter = painterResource(id = R.drawable.family),

              contentDescription ="Android",
              alignment = Alignment.Center,
              modifier = Modifier
                  .size(100.dp)
                  .clip(shape = CircleShape)

          )
          Box(modifier = Modifier.size(0.dp,20.dp))

          Image(painter = painterResource(id = R.drawable.family),

              contentDescription ="Android",
              alignment = Alignment.Center,
              modifier = Modifier
                  .size(100.dp)
                  .clip(shape = CircleShape)

          )
          Box(modifier = Modifier.size(0.dp,20.dp))












      }

    }


}
